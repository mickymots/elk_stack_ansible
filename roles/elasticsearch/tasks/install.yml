---
- name: Check ES status
  uri:
    url: "https://localhost:9200"
    user: elastic
    password: "{{ES_PWD}}"
    follow_redirects: none
    method: GET
    validate_certs: no
  register: _result
  ignore_errors: yes
 

- name: Stop ES if Running
  shell: |
    cat "{{DEPLOYMENT_HOME}}/pid" | xargs kill -9
  when:  _result.status == 200
  ignore_errors: yes


- name: "Create ELK stack root directory if it does not exist"
  # become: yes
  # become_user: root
  ansible.builtin.file:
    path: "{{ ES_HOME }}"
    state: directory
    group: ubuntu
    owner: ubuntu
    mode: '0755'

- name: Delete Previous installation
  file:
    path: "{{ DEPLOYMENT_HOME }}"
    state: absent

- name: "Create {{ DEPLOYMENT }} directory if it does not exist"
  # become: yes
  # become_user: amit
  ansible.builtin.file:
    path: "{{ DEPLOYMENT_HOME }}"
    state: directory
    group: ubuntu
    owner: ubuntu
    mode: '0755'

- name: "Create {{ DEPLOYMENT }} log directory if it does not exist"
  # become: yes
  # become_user: root
  ansible.builtin.file:
    path: "/var/log/{{ DEPLOYMENT }}"
    state: directory
    group: ubuntu
    owner: ubuntu
    mode: '0755'

- name: Download {{ DEPLOYMENT }} installation archive
  # become: yes
  # become_user: amit
  get_url:
    url: "{{ DEPLOYMENT_ARTIFACT }}"
    dest: "{{ DEPLOYMENT_HOME }}/{{DEPLOYMENT}}.tar.gz"
    validate_certs: no
    force: yes

- name: Unarchive {{ DEPLOYMENT }} installation archive
  become: yes
  become_user: ubuntu
  unarchive:
    src: "{{ DEPLOYMENT_HOME }}/{{DEPLOYMENT}}.tar.gz"
    dest: "{{ DEPLOYMENT_HOME }}"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Remove {{ DEPLOYMENT }} installation archive
  become: yes
  become_user: ubuntu
  ansible.builtin.file:
    path: "{{ DEPLOYMENT_HOME }}/{{DEPLOYMENT}}.tar.gz"
    state: absent

- name: rename current "{{DEPLOYMENT}}".yml 
  become: yes
  become_user: ubuntu
  ansible.builtin.copy:
    src: "{{DEPLOYMENT_HOME}}/config/{{DEPLOYMENT}}.yml"
    dest: "{{DEPLOYMENT_HOME}}/config/{{DEPLOYMENT}}.yml.ori"
    remote_src: yes

- name: Create {{DEPLOYMENT}} Keystore
  become: yes
  become_user: ubuntu
  ansible.builtin.expect:
    command: "{{ DEPLOYMENT_HOME }}/bin/{{DEPLOYMENT}}-keystore create"
    responses:
      '[y/N]': y
    

- name: Add Elasticsearch Password to Keystore
  become: yes
  become_user: ubuntu
  command: "{{ DEPLOYMENT_HOME }}/bin/{{DEPLOYMENT}}-keystore add 'bootstrap.password' --stdin"
  args:
    stdin: "{{ES_PWD}}"


- name: Copy custom {{DEPLOYMENT}} yml
  become: yes
  become_user: ubuntu
  ansible.builtin.template:
    src: files/{{DEPLOYMENT}}.yml
    dest: "{{ DEPLOYMENT_HOME }}/config/{{ DEPLOYMENT}}.yml"
    mode: '0644'


- name: Copy start script for {{DEPLOYMENT}}
  become: yes
  become_user: ubuntu
  ansible.builtin.template:
    src: files/start.sh
    dest: "{{ DEPLOYMENT_HOME }}/start.sh"
    mode: '0755'


- name: Copy CA File 
  become: yes
  become_user: ubuntu
  ansible.builtin.template:
    src: files/ca.crt
    dest: "{{ DEPLOYMENT_HOME }}/config/ca.crt"
    mode: '0750'

- name: Copy key File 
  become: yes
  become_user: ubuntu
  ansible.builtin.template:
    src: files/es01.key
    dest: "{{ DEPLOYMENT_HOME }}/config/es01.key"
    mode: '0750'

- name: Copy cert File 
  become: yes
  become_user: ubuntu
  ansible.builtin.template:
    src: files/es01.crt
    dest: "{{ DEPLOYMENT_HOME }}/config/es01.crt"
    mode: '0750'


- name: Start Elasticsearch
  become: yes
  become_user: ubuntu
  shell: nohup {{ DEPLOYMENT_HOME }}/start.sh
 

- name: check if the ES came up 
  uri:
    url: "https://localhost:9200"
    user: elastic
    password: "{{ES_PWD}}"
    follow_redirects: none
    method: GET
    validate_certs: no
  register: _result
  until: _result.status == 200
  retries: 12 # 12 * 5 seconds = 1min 
  delay: 5 # Every 5 seconds


- name: set new password 
  uri:
    url: https://localhost:9200/_security/user/elastic/_password
    user: elastic
    password: "{{ES_PWD}}"
    method: POST
    validate_certs: no
    body: '{"password": "{{ ES_PWD }}"}'
    force_basic_auth: yes
    status_code: 200
    body_format: json

